// <auto-generated />
using System;
using DOTP_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOTP_BE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230728051322_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DOTP_BE.Model.AdminUser", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("DOTP_BE.Model.CreateCar", b =>
                {
                    b.Property<int>("CreateCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreateCarId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PersonInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerNRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleWeight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreateCarId");

                    b.HasIndex("PersonInformationId");

                    b.ToTable("CreateCars");
                });

            modelBuilder.Entity("DOTP_BE.Model.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Township_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("DOTP_BE.Model.Fee", b =>
                {
                    b.Property<int>("FeesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeesId"), 1L, 1);

                    b.Property<int>("CertificateFees")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JourneyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MaxCars")
                        .HasColumnType("int");

                    b.Property<int>("MinCars")
                        .HasColumnType("int");

                    b.Property<int>("PartOneFees")
                        .HasColumnType("int");

                    b.Property<int>("PartTwoFees")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationCharges")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationFees")
                        .HasColumnType("int");

                    b.Property<int>("TriangleFees")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleWeightId")
                        .HasColumnType("int");

                    b.HasKey("FeesId");

                    b.HasIndex("JourneyTypeId");

                    b.HasIndex("VehicleWeightId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("DOTP_BE.Model.JourneyType", b =>
                {
                    b.Property<int>("JourneyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JourneyTypeId"), 1L, 1);

                    b.Property<string>("JourneyTypeLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JourneyTypeShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JourneyTypeId");

                    b.ToTable("JourneyTypes");
                });

            modelBuilder.Entity("DOTP_BE.Model.KALA_YGNCars", b =>
                {
                    b.Property<int>("Carid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Carid"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("D_E")
                        .HasColumnType("datetime2");

                    b.Property<string>("HOUSE_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAKE_MODEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OWNER")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYLOAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QTR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RD_ST")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REG_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VEH_WT")
                        .HasColumnType("int");

                    b.HasKey("Carid");

                    b.ToTable("Kala_YgnCars");
                });

            modelBuilder.Entity("DOTP_BE.Model.LicenseOnly", b =>
                {
                    b.Property<int>("LicenseOnlyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenseOnlyId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowBusinessTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_M10")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_NRC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_OperatorLicense")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_Part1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JourneyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("LicenseOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("License_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OtherRegistrationOffice_Id")
                        .HasColumnType("int");

                    b.Property<int>("PersonInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Township_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transaction_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LicenseOnlyId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("JourneyTypeId");

                    b.HasIndex("PersonInformationId");

                    b.HasIndex("RegistrationOfficeId");

                    b.ToTable("LicenseOnlys");
                });

            modelBuilder.Entity("DOTP_BE.Model.LicenseType", b =>
                {
                    b.Property<int>("LicenseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenseTypeId"), 1L, 1);

                    b.Property<string>("LicenseTypeLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseTypeShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LicenseTypeId");

                    b.ToTable("LicenseTypes");
                });

            modelBuilder.Entity("DOTP_BE.Model.MDYCars", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"), 1L, 1);

                    b.Property<string>("AIR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_AXLE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CANCEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COLOUR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CYL")
                        .HasColumnType("int");

                    b.Property<string>("CypherNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("D_E")
                        .HasColumnType("datetime2");

                    b.Property<string>("ENGINE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENGINE_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EP")
                        .HasColumnType("int");

                    b.Property<string>("FRAMEH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FUEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F_AXLE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GEAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HOUSE_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("I_RG")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOCATION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LXWXH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("L_IRG")
                        .HasColumnType("datetime2");

                    b.Property<string>("MAKE_MODEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("M_YEAR")
                        .HasColumnType("int");

                    b.Property<string>("Millage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OH")
                        .HasColumnType("int");

                    b.Property<string>("OWNER")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAYLOAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QTR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RD_ST")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REG_NO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SERVICE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TYPE_8")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VEH_WT")
                        .HasColumnType("int");

                    b.Property<string>("VIC_DE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIC_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("V_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("WB")
                        .HasColumnType("int");

                    b.Property<string>("WHEEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("b_rta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("d_rta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_rta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgFileLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("m_axle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarId");

                    b.ToTable("MdyCars");
                });

            modelBuilder.Entity("DOTP_BE.Model.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"), 1L, 1);

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("DOTP_BE.Model.NRC", b =>
                {
                    b.Property<int>("NRCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NRCId"), 1L, 1);

                    b.Property<string>("NRCCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRCEnglishCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRCMyanmarCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NRCNumber")
                        .HasColumnType("int");

                    b.HasKey("NRCId");

                    b.ToTable("NRCs");
                });

            modelBuilder.Entity("DOTP_BE.Model.PersonInformation", b =>
                {
                    b.Property<int>("PersonInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonInformationId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NRCId")
                        .HasColumnType("int");

                    b.Property<string>("NRC_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TownshipId")
                        .HasColumnType("int");

                    b.Property<string>("Tsp_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonInformationId");

                    b.HasIndex("NRCId");

                    b.HasIndex("TownshipId");

                    b.ToTable("PersonInformations");
                });

            modelBuilder.Entity("DOTP_BE.Model.RegistrationOffice", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeId"), 1L, 1);

                    b.Property<string>("OfficeLongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficeId");

                    b.ToTable("RegistrationOffices");
                });

            modelBuilder.Entity("DOTP_BE.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DOTP_BE.Model.Temp_Table", b =>
                {
                    b.Property<int>("Temp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Temp_Id"), 1L, 1);

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("AttachFile_M10")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_NRC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_OperatorLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_Part1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachFile_RecommandDoc5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedFile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedFile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("C_IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("C_PersonInformationId")
                        .HasColumnType("int");

                    b.Property<string>("ChalenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateCarId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_AllowBusinessTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("L_IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("L_IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("L_N_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_N_Township_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_O_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_O_Township_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("L_OtherRegistrationOffice_Id")
                        .HasColumnType("int");

                    b.Property<string>("L_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumberLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LicenseOnlyId")
                        .HasColumnType("int");

                    b.Property<int>("LicenseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("NRC_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("O_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("O_AllowBusinessTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("O_ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("O_ApplyLicenseType")
                        .HasColumnType("int");

                    b.Property<string>("O_DesiredRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("O_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("O_ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("O_Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("O_IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("O_IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("O_JourneyType_Id")
                        .HasColumnType("int");

                    b.Property<string>("O_NRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("O_Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("O_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("O_RegistrationOffice_Id")
                        .HasColumnType("int");

                    b.Property<int?>("O_TotalCar")
                        .HasColumnType("int");

                    b.Property<string>("O_Township")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_VehicleBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_VehicleLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_VehicleOwnerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_VehicleOwnerNRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_VehicleOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_VehicleWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperatorId")
                        .HasColumnType("int");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefTransactionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transaction_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Triangle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("V_CarryLogisticType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V_Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V_VehicleDesiredRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V_VehicleLineTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V_VehicleLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V_VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V_VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerNRC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleWeightId")
                        .HasColumnType("int");

                    b.HasKey("Temp_Id");

                    b.HasIndex("CreateCarId");

                    b.HasIndex("LicenseOnlyId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Temp_Tables");
                });

            modelBuilder.Entity("DOTP_BE.Model.Township", b =>
                {
                    b.Property<int>("TownshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TownshipId"), 1L, 1);

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TownshipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TownshipNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TownshipNameMyanmar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TownshipId");

                    b.ToTable("Townships");
                });

            modelBuilder.Entity("DOTP_BE.Model.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<DateTime?>("AccpectedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AccpectedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("CertificateFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChalenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ModifiedCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NRC_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PartOneFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PartTwoFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PrintedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RegistrationCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RegistrationFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalCars")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_WithoutCertificate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Transaction_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TriangleFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DOTP_BE.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<int?>("NRCId")
                        .HasColumnType("int");

                    b.Property<string>("NRC_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("NRCId");

                    b.HasIndex("PersonInformationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DOTP_BE.Model.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttachedFile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedFile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarryLogisticType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CertificatePrinted")
                        .HasColumnType("bit");

                    b.Property<string>("ChalenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateCarId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumberLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LicenseOnlyId")
                        .HasColumnType("int");

                    b.Property<int>("LicenseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("License_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperatorId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Part1Printed")
                        .HasColumnType("bit");

                    b.Property<bool>("Part2Printed")
                        .HasColumnType("bit");

                    b.Property<int>("RefTransactionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transaction_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Triangle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrianglePrinted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleDesiredRoute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleLineTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleWeightId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("CreateCarId");

                    b.HasIndex("LicenseOnlyId");

                    b.HasIndex("LicenseTypeId");

                    b.HasIndex("VehicleWeightId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DOTP_BE.Model.VehicleWeight", b =>
                {
                    b.Property<int>("VehicleWeightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleWeightId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleWeightId");

                    b.ToTable("VehicleWeights");
                });

            modelBuilder.Entity("DOTP_BE.Model.VehicleWeightFee", b =>
                {
                    b.Property<int>("VehicleWeightFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleWeightFeeId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ElevenToTwenty")
                        .HasColumnType("int");

                    b.Property<int>("FiveHundredOneToThousand")
                        .HasColumnType("int");

                    b.Property<int>("FourtyOneToHundred")
                        .HasColumnType("int");

                    b.Property<int>("HundredOneToFiveHundred")
                        .HasColumnType("int");

                    b.Property<int>("OneToFive")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SixToTen")
                        .HasColumnType("int");

                    b.Property<int>("ThirtyOneToFourty")
                        .HasColumnType("int");

                    b.Property<int>("ThousandOneAndAbove")
                        .HasColumnType("int");

                    b.Property<int>("TwentyOneToThirty")
                        .HasColumnType("int");

                    b.Property<int>("VehicleWeightId")
                        .HasColumnType("int");

                    b.HasKey("VehicleWeightFeeId");

                    b.HasIndex("VehicleWeightId");

                    b.ToTable("VehicleWeightFees");
                });

            modelBuilder.Entity("DOTP_BE.Models.OperatorDetail", b =>
                {
                    b.Property<int>("OperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperatorId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowBusinessTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApplyLicenseType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesiredRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JourneyType_Id")
                        .HasColumnType("int");

                    b.Property<string>("LicenseHolderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationOffice_Id")
                        .HasColumnType("int");

                    b.Property<int>("TotalCar")
                        .HasColumnType("int");

                    b.Property<string>("Township")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transaction_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("applicant_Id")
                        .HasColumnType("int");

                    b.HasKey("OperatorId");

                    b.HasIndex("PersonInformationId");

                    b.HasIndex("VehicleId")
                        .IsUnique()
                        .HasFilter("[VehicleId] IS NOT NULL");

                    b.ToTable("OperatorDetails");
                });

            modelBuilder.Entity("DOTP_BE.Model.CreateCar", b =>
                {
                    b.HasOne("DOTP_BE.Model.PersonInformation", "PersonInformation")
                        .WithMany("CreateCars")
                        .HasForeignKey("PersonInformationId");

                    b.Navigation("PersonInformation");
                });

            modelBuilder.Entity("DOTP_BE.Model.Fee", b =>
                {
                    b.HasOne("DOTP_BE.Model.JourneyType", "JourneyType")
                        .WithMany("Fees")
                        .HasForeignKey("JourneyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTP_BE.Model.VehicleWeight", "VehicleWeight")
                        .WithMany()
                        .HasForeignKey("VehicleWeightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JourneyType");

                    b.Navigation("VehicleWeight");
                });

            modelBuilder.Entity("DOTP_BE.Model.LicenseOnly", b =>
                {
                    b.HasOne("DOTP_BE.Model.Delivery", "Delivery")
                        .WithMany("LicenseOnlys")
                        .HasForeignKey("DeliveryId");

                    b.HasOne("DOTP_BE.Model.JourneyType", "JourneyType")
                        .WithMany("LicenseOnlys")
                        .HasForeignKey("JourneyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTP_BE.Model.PersonInformation", "PersonInformation")
                        .WithMany("LicenseOnlys")
                        .HasForeignKey("PersonInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTP_BE.Model.RegistrationOffice", "RegistrationOffice")
                        .WithMany("LicenseOnlys")
                        .HasForeignKey("RegistrationOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");

                    b.Navigation("JourneyType");

                    b.Navigation("PersonInformation");

                    b.Navigation("RegistrationOffice");
                });

            modelBuilder.Entity("DOTP_BE.Model.Menu", b =>
                {
                    b.HasOne("DOTP_BE.Model.Role", "Role")
                        .WithMany("Menus")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DOTP_BE.Model.PersonInformation", b =>
                {
                    b.HasOne("DOTP_BE.Model.NRC", "NRC")
                        .WithMany("PersonInformations")
                        .HasForeignKey("NRCId");

                    b.HasOne("DOTP_BE.Model.Township", "Township")
                        .WithMany("PersonInformations")
                        .HasForeignKey("TownshipId");

                    b.Navigation("NRC");

                    b.Navigation("Township");
                });

            modelBuilder.Entity("DOTP_BE.Model.Temp_Table", b =>
                {
                    b.HasOne("DOTP_BE.Model.CreateCar", "CreateCar")
                        .WithMany()
                        .HasForeignKey("CreateCarId");

                    b.HasOne("DOTP_BE.Model.LicenseOnly", "LicenseOnly")
                        .WithMany()
                        .HasForeignKey("LicenseOnlyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTP_BE.Model.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateCar");

                    b.Navigation("LicenseOnly");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DOTP_BE.Model.User", b =>
                {
                    b.HasOne("DOTP_BE.Model.NRC", "NRC")
                        .WithMany()
                        .HasForeignKey("NRCId");

                    b.HasOne("DOTP_BE.Model.PersonInformation", "PersonInformation")
                        .WithMany("Users")
                        .HasForeignKey("PersonInformationId");

                    b.Navigation("NRC");

                    b.Navigation("PersonInformation");
                });

            modelBuilder.Entity("DOTP_BE.Model.Vehicle", b =>
                {
                    b.HasOne("DOTP_BE.Model.CreateCar", "CreateCar")
                        .WithMany("Vehicles")
                        .HasForeignKey("CreateCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTP_BE.Model.LicenseOnly", "LicenseOnly")
                        .WithMany()
                        .HasForeignKey("LicenseOnlyId");

                    b.HasOne("DOTP_BE.Model.LicenseType", "LicenseType")
                        .WithMany("Vehicles")
                        .HasForeignKey("LicenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTP_BE.Model.VehicleWeight", "VehicleWeight")
                        .WithMany()
                        .HasForeignKey("VehicleWeightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateCar");

                    b.Navigation("LicenseOnly");

                    b.Navigation("LicenseType");

                    b.Navigation("VehicleWeight");
                });

            modelBuilder.Entity("DOTP_BE.Model.VehicleWeightFee", b =>
                {
                    b.HasOne("DOTP_BE.Model.VehicleWeight", "VehicleWeight")
                        .WithMany()
                        .HasForeignKey("VehicleWeightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleWeight");
                });

            modelBuilder.Entity("DOTP_BE.Models.OperatorDetail", b =>
                {
                    b.HasOne("DOTP_BE.Model.PersonInformation", "PersonInformation")
                        .WithMany("OperatorDetails")
                        .HasForeignKey("PersonInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTP_BE.Model.Vehicle", "Vehicle")
                        .WithOne("OperatorDetail")
                        .HasForeignKey("DOTP_BE.Models.OperatorDetail", "VehicleId");

                    b.Navigation("PersonInformation");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DOTP_BE.Model.CreateCar", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("DOTP_BE.Model.Delivery", b =>
                {
                    b.Navigation("LicenseOnlys");
                });

            modelBuilder.Entity("DOTP_BE.Model.JourneyType", b =>
                {
                    b.Navigation("Fees");

                    b.Navigation("LicenseOnlys");
                });

            modelBuilder.Entity("DOTP_BE.Model.LicenseType", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("DOTP_BE.Model.NRC", b =>
                {
                    b.Navigation("PersonInformations");
                });

            modelBuilder.Entity("DOTP_BE.Model.PersonInformation", b =>
                {
                    b.Navigation("CreateCars");

                    b.Navigation("LicenseOnlys");

                    b.Navigation("OperatorDetails");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DOTP_BE.Model.RegistrationOffice", b =>
                {
                    b.Navigation("LicenseOnlys");
                });

            modelBuilder.Entity("DOTP_BE.Model.Role", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("DOTP_BE.Model.Township", b =>
                {
                    b.Navigation("PersonInformations");
                });

            modelBuilder.Entity("DOTP_BE.Model.Vehicle", b =>
                {
                    b.Navigation("OperatorDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
